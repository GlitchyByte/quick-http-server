#!/bin/sh
# Copyright 2020-2021 GlitchyByte
# SPDX-License-Identifier: Apache-2.0

# Run app!

# Capture caller directory and script directory.
callingDir="$(pwd)"
scriptDir="$(cd $(dirname "$0") && pwd)"

# Capture project to run.
project=$1
if test -z "$project"; then
  echo "Usage: ./run PROJECT [arg1 arg2 ...]"
  exit 1
fi

# Capture arguments.
shift
args=$*

# Go to code directory.
cd code || exit 1

# Build distribution and gather properties.
# We do it in one pass for speed.
gradleProperties=$(./gradlew "$project":build "$project":properties)
./gradlew "$project":build
if test $? -ne 0; then
  echo "Build failed!"
  cd "$callingDir"
  exit 1
fi

# Get Gradle properties.
# We did this already for speed. Read above.
# gradleProperties=$(./gradlew "$project":properties)

# Go back to caller directory.
cd "$callingDir" || exit 1

# Get build directory.
buildDir=$(echo "$gradleProperties" | sed -n 's/^buildDir: \(.*\)/\1/p')
if test -z "$buildDir"; then
  echo "Build directory not found!"
  exit 1
fi

# Get distribution directory.
distsDirName=$(echo "$gradleProperties" | sed -n 's/^distsDirName: \(.*\)/\1/p')
if test -z "$distsDirName"; then
  echo "Distribution directory not found!"
  exit 1
fi
distDir="$buildDir/$distsDirName"

# Get application name.
appName=$(echo "$gradleProperties" | sed -n 's/^applicationName: \(.*\)/\1/p')
if test -z "$appName"; then
  echo "Application name not found!"
  exit 1
fi

# Get version.
version=$(echo "$gradleProperties" | sed -n 's/^version: \(.*\)/\1/p')
if test -z "$version"; then
  echo "Version not found!"
  exit 1
fi

# Get tar path.
if test "$version" = "unspecified"; then
  tarName="$appName.tar"
else
  tarName="$appName-$version.tar"
fi
tarPath="$distDir/$tarName"
if test -z "$tarPath"; then
  echo "No distribution found!"
  exit 1
fi

# Get work dir.
workDir="${tarPath%.tar}"

# Remove work directory, if it exists.
if test -d "$workDir"; then
  rm -dr "$workDir"
  if test $? -ne 0; then
    echo "Can't remove '$workDir'!"
    exit 1
  fi
fi

# Extract distribution into work dir.
tar -xf "$tarPath" -C "$distDir"
if test $? -gt 0; then
  echo "Tar expansion failed!"
  exit 1
fi

# Run app.
"$workDir"/bin/"$appName" $args
