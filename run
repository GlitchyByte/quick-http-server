#!/bin/sh
# Copyright 2020-2021 GlitchyByte
# SPDX-License-Identifier: Apache-2.0

# Run app!

# Capture caller directory and script directory.
calling_dir="$(pwd)"
script_dir="$(cd $(dirname "$0") && pwd)"

# Capture project to run.
project=$1
if test -z "$project"; then
  echo "Usage: ./run PROJECT [arg1 arg2 ...]"
  exit 1
fi

# Capture arguments.
shift
args=$*

# Go to code directory.
cd code || exit 1

# Build distribution and gather properties.
# We do it in one pass for speed.
gradle_properties=$(./gradlew "$project":build "$project":properties)
./gradlew "$project":build
if test $? -ne 0; then
  echo "Build failed!"
  cd "$calling_dir"
  exit 1
fi

# Go back to caller directory.
cd "$calling_dir" || exit 1

# Get build directory.
build_dir=$(echo "$gradle_properties" | sed -n 's/^buildDir: \(.*\)/\1/p')
if test -z "$build_dir"; then
  echo "Build directory not found!"
  exit 1
fi

# Get distribution directory.
dist_subdir=$(echo "$gradle_properties" | sed -n 's/^distsDirName: \(.*\)/\1/p')
if test -z "$dist_subdir"; then
  echo "Distribution directory not found!"
  exit 1
fi
dist_dir="$build_dir/$dist_subdir"

# Get application name.
app_name=$(echo "$gradle_properties" | sed -n 's/^applicationName: \(.*\)/\1/p')
if test -z "$app_name"; then
  echo "Application name not found!"
  exit 1
fi

# Get version.
version=$(echo "$gradle_properties" | sed -n 's/^version: \(.*\)/\1/p')
if test -z "$version"; then
  echo "Version not found!"
  exit 1
fi

# Get tar path.
if test "$version" = "unspecified"; then
  tar_name="$app_name.tar"
else
  tar_name="$app_name-$version.tar"
fi
tar_path="$dist_dir/$tar_name"
if test -z "$tar_path"; then
  echo "No distribution found!"
  exit 1
fi

# Get work dir.
work_dir="${tar_path%.tar}"

# Remove work directory, if it exists.
if test -d "$work_dir"; then
  rm -dr "$work_dir"
  if test $? -ne 0; then
    echo "Can't remove '$work_dir'!"
    exit 1
  fi
fi

# Extract distribution into work dir.
tar -xf "$tar_path" -C "$dist_dir"
if test $? -gt 0; then
  echo "Tar expansion failed!"
  exit 1
fi

# Run app.
"$work_dir"/bin/"$app_name" $args
